// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  crendentials Credentials[]
  Notes        Notes[]
  Wifis        Wifis[]
  Cards        Cards[]
  Documents    Documents[]

  @@map("users")
}

model Credentials {
  id       Int    @id @default(autoincrement())
  title    String
  url      String
  username String
  password String
  user     Users  @relation(fields: [userId], references: [id])
  userId   Int


  @@unique([userId, title], name: "credentialIndentifier")
  @@map("credentials")
}

model Notes {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(50)
  description String @db.VarChar(1000)
  user        Users  @relation(fields: [userId], references: [id])
  userId      Int


  @@unique([userId, title], name: "noteIdentifier")
  @@map("notes")
}

model Cards {
  id             Int     @id @default(autoincrement())
  title          String
  cardNumber     String
  cardholderName String
  CVV            String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           Type
  user           Users   @relation(fields: [userId], references: [id])
  userId         Int

  @@unique([userId, title], name: "cardIdentifier")
  @@map("cards")
}

enum Type {
  credit
  debit
  both
}

model Wifis {
  id       Int    @id @default(autoincrement())
  title    String
  wifiName String
  password String
  user     Users  @relation(fields: [userId], references: [id])
  userId   Int

  @@unique([userId, title], name: "wifiIdentifier")
  @@map("wifis")
}

model Documents {
  id             Int          @id @default(autoincrement())
  title          String
  type           DocumentType
  fullName       String
  expeditionDate String
  expirationDate String
  docNumber      String
  issuer         String
  user           Users        @relation(fields: [userId], references: [id])
  userId         Int

  @@unique([userId, title], name: "documentIdentifier")
  @@map("documents")
}

enum DocumentType {
  RG
  CNH
}
